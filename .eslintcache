[{"/home/jleonardo/dev/chat-app/chat-frontend/src/index.js":"1","/home/jleonardo/dev/chat-app/chat-frontend/src/App.js":"2","/home/jleonardo/dev/chat-app/chat-frontend/src/reportWebVitals.js":"3","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Auth/Login.js":"4","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Auth/Register.js":"5","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/Chat.js":"6","/home/jleonardo/dev/chat-app/chat-frontend/src/services/authService.js":"7","/home/jleonardo/dev/chat-app/chat-frontend/src/services/api.js":"8","/home/jleonardo/dev/chat-app/chat-frontend/src/store/index.js":"9","/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/index.js":"10","/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/auth.js":"11","/home/jleonardo/dev/chat-app/chat-frontend/src/store/actions/auth.js":"12","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Router/ProtectedRoute.js":"13","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Navbar/Navbar.js":"14","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Modal/Modal.js":"15","/home/jleonardo/dev/chat-app/chat-frontend/src/store/types/index.js":"16","/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/chat.js":"17","/home/jleonardo/dev/chat-app/chat-frontend/src/store/actions/chat.js":"18","/home/jleonardo/dev/chat-app/chat-frontend/src/services/chatService.js":"19","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Messenger/Messenger.js":"20","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/FriendList/FriendList.js":"21","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Friend/Friend.js":"22","/home/jleonardo/dev/chat-app/chat-frontend/src/utils/helpers.js":"23","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/ChatHeader/ChatHeader.js":"24","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/MessageInput/MessageInput.js":"25","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/MessageBox/MessageBox.js":"26","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Message/Message.js":"27","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/hooks/socketConnect.js":"28"},{"size":621,"mtime":1608137219588,"results":"29","hashOfConfig":"30"},{"size":1317,"mtime":1608215815442,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1607980840441,"results":"32","hashOfConfig":"30"},{"size":1734,"mtime":1608233735595,"results":"33","hashOfConfig":"30"},{"size":2866,"mtime":1608149780940,"results":"34","hashOfConfig":"30"},{"size":671,"mtime":1610557069849,"results":"35","hashOfConfig":"30"},{"size":1554,"mtime":1609967462492,"results":"36","hashOfConfig":"30"},{"size":657,"mtime":1610978543352,"results":"37","hashOfConfig":"30"},{"size":213,"mtime":1608136580509,"results":"38","hashOfConfig":"30"},{"size":177,"mtime":1610118040567,"results":"39","hashOfConfig":"30"},{"size":938,"mtime":1610559607641,"results":"40","hashOfConfig":"30"},{"size":924,"mtime":1610561400392,"results":"41","hashOfConfig":"30"},{"size":456,"mtime":1608153864644,"results":"42","hashOfConfig":"30"},{"size":4618,"mtime":1610730838672,"results":"43","hashOfConfig":"30"},{"size":908,"mtime":1609951287306,"results":"44","hashOfConfig":"30"},{"size":146,"mtime":1609969336148,"results":"45","hashOfConfig":"30"},{"size":7578,"mtime":1611096198799,"results":"46","hashOfConfig":"30"},{"size":2979,"mtime":1611097621615,"results":"47","hashOfConfig":"30"},{"size":1877,"mtime":1611094732505,"results":"48","hashOfConfig":"30"},{"size":791,"mtime":1610136888675,"results":"49","hashOfConfig":"30"},{"size":2691,"mtime":1610996151373,"results":"50","hashOfConfig":"30"},{"size":1203,"mtime":1610138681471,"results":"51","hashOfConfig":"30"},{"size":99,"mtime":1610128294875,"results":"52","hashOfConfig":"30"},{"size":4150,"mtime":1611094923477,"results":"53","hashOfConfig":"30"},{"size":5329,"mtime":1611013620468,"results":"54","hashOfConfig":"30"},{"size":2732,"mtime":1610743325694,"results":"55","hashOfConfig":"30"},{"size":939,"mtime":1610378271871,"results":"56","hashOfConfig":"30"},{"size":1614,"mtime":1611097564582,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ogwgly",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jleonardo/dev/chat-app/chat-frontend/src/index.js",[],["119","120"],"/home/jleonardo/dev/chat-app/chat-frontend/src/App.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/reportWebVitals.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Auth/Login.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Auth/Register.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/Chat.js",["121"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useSocket from \"./hooks/socketConnect\";\n\nimport FriendList from \"./components/FriendList/FriendList\";\nimport Messenger from \"./components/Messenger/Messenger\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport \"./Chat.scss\";\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.authReducer.user);\n\n  useSocket(user, dispatch);\n\n  return (\n    <div id=\"chat-container\">\n      <Navbar />\n      <div id=\"chat-wrap\">\n        <FriendList />\n        <Messenger />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/jleonardo/dev/chat-app/chat-frontend/src/services/authService.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/services/api.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/index.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/index.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/auth.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/actions/auth.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Router/ProtectedRoute.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Navbar/Navbar.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Modal/Modal.js",["122"],"import React from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal = (props) => {\n  const findByKey = (name) =>\n    props.children.map((child) => {\n      if (child.key === name) return child;\n    });\n\n  const closeModal = (e) => {\n    e.stopPropagation();\n\n    if (e.target.classList.contains(\"modal-close\")) {\n      return props.click();\n    }\n  };\n\n  return (\n    <div className=\"modal-mask modal-close\" onClick={closeModal}>\n      <div className=\"modal-wrapper\">\n        <div className=\"modal-container\">\n          <div className=\"modal-header\">{findByKey(\"header\")}</div>\n\n          <div className=\"modal-body\">{findByKey(\"body\")}</div>\n\n          <div className=\"modal-footer\">\n            <button className=\"modal-close\" onClick={closeModal}>\n              Close\n            </button>\n            {findByKey(\"footer\")}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/home/jleonardo/dev/chat-app/chat-frontend/src/store/types/index.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/reducers/chat.js",["123"],"/home/jleonardo/dev/chat-app/chat-frontend/src/store/actions/chat.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/services/chatService.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Messenger/Messenger.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/FriendList/FriendList.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Friend/Friend.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/utils/helpers.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/ChatHeader/ChatHeader.js",["124","125","126","127"],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/MessageInput/MessageInput.js",["128"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./MessageInput.scss\";\nimport ChatService from \"../../../../services/chatService\";\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { incrementScroll } from \"../../../../store/actions/chat\";\n\nconst MessageInput = ({ chat }) => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.authReducer.user);\n  const socket = useSelector((state) => state.chatReducer.socket);\n  const newMessage = useSelector((state) => state.chatReducer.newMessage);\n\n  const fileUpload = useRef();\n  const msgInput = useRef();\n\n  const [message, setMessage] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(\"\");\n  const [showNewMessageNotification, setShowNewMessageNotification] = useState(\n    false\n  );\n\n  const handleMessage = (e) => {\n    const value = e.target.value;\n    setMessage(value);\n\n    const receiver = {\n      chatId: chat.id,\n      fromUser: user,\n      toUserId: chat.Users.map((user) => user.id),\n    };\n\n    if (value.length === 1) {\n      receiver.typing = true;\n      socket.emit(\"typing\", receiver);\n    }\n\n    if (value.length === 0) {\n      receiver.typing = false;\n      socket.emit(\"typing\", receiver);\n    }\n  };\n\n  const handleKeyDown = (e, imageUpload) => {\n    if (e.key === \"Enter\") sendMessage(imageUpload);\n  };\n\n  const sendMessage = (imageUplaod) => {\n    if (message.length < 1 && !imageUplaod) return;\n\n    const msg = {\n      type: imageUplaod ? \"image\" : \"text\",\n      fromUser: user,\n      toUserId: chat.Users.map((user) => user.id),\n      chatId: chat.id,\n      message: imageUplaod ? imageUplaod : message,\n    };\n\n    setMessage(\"\");\n    setImage(\"\");\n    setShowEmojiPicker(false);\n\n    // send message with socket\n    socket.emit(\"message\", msg);\n  };\n\n  const handleImageUpload = () => {\n    const formData = new FormData();\n    formData.append(\"id\", chat.id);\n    formData.append(\"image\", image);\n\n    ChatService.uploadImage(formData)\n      .then((image) => sendMessage(image))\n      .catch((err) => console.log(err));\n  };\n\n  const selectEmoji = (emoji) => {\n    const startPosition = msgInput.current.selectionStart;\n    const endPosition = msgInput.current.selectionEnd;\n    const emojiLength = emoji.native.length;\n    const value = msgInput.current.value;\n    setMessage(\n      value.substring(0, startPosition) +\n        emoji.native +\n        value.substring(endPosition, value.length)\n    );\n    msgInput.current.focus();\n    msgInput.current.selectionEnd = endPosition + emojiLength;\n  };\n\n  const showNewMessage = () => {\n    dispatch(incrementScroll());\n    setShowNewMessageNotification(false);\n  };\n\n  useEffect(() => {\n    const msgBox = document.getElementById(\"msg-box\");\n    if (\n      !newMessage.seen &&\n      newMessage.chatId === chat.id &&\n      msgBox.scrollHeight !== msgBox.clientHeight // test if there is a scroll been showed\n    ) {\n      if (msgBox.scrollTop > msgBox.scrollHeight * 0.3) {\n        dispatch(incrementScroll(incrementScroll));\n      } else {\n        setShowNewMessageNotification(true);\n      }\n    } else {\n      setShowNewMessageNotification(false);\n    }\n  }, [newMessage, dispatch]);\n\n  return (\n    <div id=\"input-container\">\n      <div id=\"image-upload-container\">\n        <div>\n          {showNewMessageNotification ? (\n            <div id=\"message-notification\" onClick={showNewMessage}>\n              <FontAwesomeIcon icon=\"bell\" className=\"fa-icon\" />\n              <p className=\"m-0\">New message</p>\n            </div>\n          ) : null}\n        </div>\n\n        <div id=\"image-upload\">\n          {image.name ? (\n            <div id=\"image-details\">\n              <p className=\"m-0\">{image.name}</p>\n              <FontAwesomeIcon\n                onClick={handleImageUpload}\n                icon=\"upload\"\n                className=\"fa-icon\"\n              />\n              <FontAwesomeIcon\n                onClick={() => setImage(\"\")}\n                icon=\"times\"\n                className=\"fa-icon\"\n              />\n            </div>\n          ) : null}\n          <FontAwesomeIcon\n            onClick={() => fileUpload.current.click()}\n            icon={[\"far\", \"image\"]}\n            className=\"fa-icon\"\n          />\n        </div>\n      </div>\n      <div id=\"message-input\">\n        <input\n          ref={msgInput}\n          type=\"text\"\n          placeholder=\"Message...\"\n          value={message}\n          onChange={(e) => handleMessage(e)}\n          onKeyDown={(e) => handleKeyDown(e, false)}\n        />\n        <FontAwesomeIcon\n          onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n          icon={[\"far\", \"smile\"]}\n          className=\"fa-icon\"\n        />\n      </div>\n\n      <input\n        id=\"chat-image\"\n        ref={fileUpload}\n        type=\"file\"\n        onChange={(e) => setImage(e.target.files[0])}\n      />\n\n      {showEmojiPicker ? (\n        <Picker\n          title=\"Pick you emoji...\"\n          emoji=\"point_up\"\n          style={{ position: \"absolute\", bottom: \"20px\", right: \"20px\" }}\n          onSelect={selectEmoji}\n        ></Picker>\n      ) : null}\n    </div>\n  );\n};\n\nexport default MessageInput;\n","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/MessageBox/MessageBox.js",["129"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Message from \"../Message/Message\";\nimport { paginateMessages } from \"../../../../store/actions/chat\";\nimport \"./MessageBox.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst MessageBox = ({ chat }) => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.authReducer.user);\n  const scrollBottom = useSelector((state) => state.chatReducer.scrollBottom);\n  const senderTyping = useSelector((state) => state.chatReducer.senderTyping);\n  const [loading, setLoading] = useState(false);\n  const [scrollUp, setScrollUp] = useState(0);\n\n  const msgBox = useRef();\n\n  const scrollManual = (value) => {\n    msgBox.current.scrollTop = value;\n  };\n\n  const handleInfiniteScroll = (e) => {\n    if (e.target.scrollTop === 0) {\n      setLoading(true);\n      const pagination = chat.Pagination;\n      const page = typeof pagination == \"undefined\" ? 1 : pagination.page;\n\n      dispatch(paginateMessages(chat.id, parseInt(page) + 1))\n        .then((res) => {\n          if (res) {\n            setScrollUp(scrollUp + 1);\n          }\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    scrollManual(Math.ceil(msgBox.current.scrollHeight * 0.1));\n  }, [scrollUp]);\n\n  useEffect(() => {\n    if (\n      senderTyping.typing &&\n      msgBox.current.scrollTop > msgBox.current.scrollHeight * 0.3\n    ) {\n      setTimeout(() => {\n        scrollManual(Math.ceil(msgBox.current.scrollHeight));\n      }, 100);\n    }\n  }, [senderTyping]);\n\n  useEffect(() => {\n    if (!senderTyping.typing) {\n      setTimeout(() => {\n        scrollManual(msgBox.current.scrollHeight);\n      }, 100);\n    }\n  }, [scrollBottom]);\n\n  return (\n    <div onScroll={handleInfiniteScroll} id=\"msg-box\" ref={msgBox}>\n      {loading ? (\n        <p className=\"loader m-0\">\n          <FontAwesomeIcon icon=\"spinner\" className=\"fa-spin\" />{\" \"}\n        </p>\n      ) : null}\n      {chat.Messages.map((message, index) => {\n        return (\n          <Message\n            user={user}\n            chat={chat}\n            message={message}\n            index={index}\n            key={message.id}\n          />\n        );\n      })}\n      {senderTyping.typing && senderTyping.chatId === chat.id ? (\n        <div className=\"message\">\n          <div className=\"other-person\">\n            <p className=\"m-0\">\n              {senderTyping.fromUser.firstName} {senderTyping.fromUser.lastName}{\" \"}\n              is typing...\n            </p>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default MessageBox;\n","/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/components/Message/Message.js",[],"/home/jleonardo/dev/chat-app/chat-frontend/src/components/Chat/hooks/socketConnect.js",["130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":6,"column":32,"nodeType":"141","messageId":"142","endLine":6,"endColumn":34},{"ruleId":"135","severity":1,"message":"143","line":287,"column":46,"nodeType":"137","messageId":"138","endLine":287,"endColumn":57},{"ruleId":"135","severity":1,"message":"144","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":28},{"ruleId":"135","severity":1,"message":"145","line":13,"column":30,"nodeType":"137","messageId":"138","endLine":13,"endColumn":47},{"ruleId":"135","severity":1,"message":"146","line":14,"column":10,"nodeType":"137","messageId":"138","endLine":14,"endColumn":29},{"ruleId":"135","severity":1,"message":"147","line":14,"column":31,"nodeType":"137","messageId":"138","endLine":14,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":115,"column":6,"nodeType":"150","endLine":115,"endColumn":28,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":64,"column":6,"nodeType":"150","endLine":64,"endColumn":20,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":65,"column":6,"nodeType":"150","endLine":65,"endColumn":16,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'notifyUsers' is assigned a value but never used.","'showLeaveChatModal' is assigned a value but never used.","'setLeaveChatModal' is assigned a value but never used.","'showDeleteChatModal' is assigned a value but never used.","'setDeleteChatModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chat.id'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'senderTyping.typing'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [newMessage, dispatch, chat.id]",{"range":"167","text":"168"},"Update the dependencies array to be: [scrollBottom, senderTyping.typing]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, user]",{"range":"171","text":"172"},[3352,3374],"[newMessage, dispatch, chat.id]",[1834,1848],"[scrollBottom, senderTyping.typing]",[1572,1582],"[dispatch, user]"]